repositories.mavenCentral()
apply plugin: 'eclipse'
apply plugin: 'scala'

repositories {
	mavenCentral()
}

dependencies {
    compile "io.gatling.highcharts:gatling-charts-highcharts:2.1.7"
    testCompile "junit:junit:4.11"
}

tasks.withType(ScalaCompile) {
  scalaCompileOptions.useAnt = false
}

task BasicSimulation(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	systemProperties = ["gatling.http.enableGA": "false"]
	main = 'io.gatling.app.Gatling'
	args = [
      		"--simulation", "computerdatabase.BasicSimulation",
   			"--results-folder", "${buildDir}/gatling-results",
   			"--binaries-folder", sourceSets.test.output.classesDir.toString(),
		"--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
	]
}

task AdvancedSimulationStep01(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	systemProperties = ["gatling.http.enableGA": "false"]
	main = 'io.gatling.app.Gatling'
	args = [
      		"--simulation", "computerdatabase.advanced.AdvancedSimulationStep01",
   			"--results-folder", "${buildDir}/gatling-results",
   			"--binaries-folder", sourceSets.test.output.classesDir.toString(),
		"--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
	]
}

task AdvancedSimulationStep02(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	systemProperties = ["gatling.http.enableGA": "false"]
	main = 'io.gatling.app.Gatling'
	args = [
			  "--simulation", "computerdatabase.advanced.AdvancedSimulationStep02",
			   "--results-folder", "${buildDir}/gatling-results",
			   "--binaries-folder", sourceSets.test.output.classesDir.toString(),
		"--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
	]
}

task AdvancedSimulationStep03(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	systemProperties = ["gatling.http.enableGA": "false"]
	main = 'io.gatling.app.Gatling'
	args = [
      		"--simulation", "computerdatabase.advanced.AdvancedSimulationStep03",
   			"--data-folder", "data",
   			"--results-folder", "${buildDir}/gatling-results",
   			"--binaries-folder", sourceSets.test.output.classesDir.toString(),
		"--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
	]
}

task AdvancedSimulationStep04(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	systemProperties = ["gatling.http.enableGA": "false"]
	main = 'io.gatling.app.Gatling'
	args = [
      		"--simulation", "computerdatabase.advanced.AdvancedSimulationStep04",
   			"--data-folder", "data",
   			"--results-folder", "${buildDir}/gatling-results",
   			"--binaries-folder", sourceSets.test.output.classesDir.toString(),
		"--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
	]
}

task AdvancedSimulationStep05(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	systemProperties = ["gatling.http.enableGA": "false"]
	main = 'io.gatling.app.Gatling'
	args = [
      		"--simulation", "computerdatabase.advanced.AdvancedSimulationStep05",
   			"--data-folder", "data",
   			"--results-folder", "${buildDir}/gatling-results",
   			"--binaries-folder", sourceSets.test.output.classesDir.toString(),
		"--bodies-folder", sourceSets.test.resources.srcDirs.toList().first().toString() + "/gatling/bodies",
	]
}
